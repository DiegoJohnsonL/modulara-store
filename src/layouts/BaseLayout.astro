---
import { ViewTransitions } from "astro:transitions";
import { SEO } from "astro-seo";
import "@fontsource-variable/dm-sans";
import "@/styles/globals.css";
import "@/styles/smooth-scroll.css";
import WassaButton from "@/pages/_home/wassa-button";
import LocomotiveScroll from "locomotive-scroll";
import Loader from "@/components/Loader.astro";
import { LOADER_DURATION } from "@/lib/consts";

interface Props {
  title: string;
  description?: string;
  image?: string;
}

const {
  title,
  description = "Una descripci√≥n muy optimizada y llena de palabras clave bien investigadas.",
  image = "https://user-images.githubusercontent.com/5182256/131216951-8f74f425-f775-463d-a11b-0e01ad9fce8d.png",
} = Astro.props;
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <SEO
      title={title}
      description={description}
      openGraph={{
        basic: {
          title: "A Very Descriptive Title",
          type: "A type.",
          image: image,
        },
      }}
      twitter={{
        creator: "@DiegoJo58079875",
      }}
      extend={{
        // extending the default link tags
        link: [{ rel: "icon", href: "/favicon.ico" }],
        // extending the default meta tags
        meta: [
          {
            name: "twitter:image",
            content: image,
          },
          { name: "twitter:title", content: "Tinker Tailor Soldier Spy" },
          { name: "twitter:description", content: "Agent" },
        ],
      }}
    />
    <ViewTransitions />
  </head>
  <body data-scroll-container class="relative">
    <!-- <div
      id="loader-container"
      class="bg-[#f3eee6] z-[200] fixed top-0 left-0 w-full h-screen transition-transform duration-1000 ease-in-out"
    >
      <Loader />
    </div> -->
    <slot />
    <WassaButton client:load />
  </body>
</html>

<script is:inline define:vars={{ LOADER_DURATION }}>
  let loaderContainer = document.getElementById("loader-container");
  setTimeout(() => {
    loaderContainer.style.transform = "translateY(-100%)";
    loaderContainer.addEventListener("transitionend", () => {
      loaderContainer.style.display = "none";
    });
  }, LOADER_DURATION);
</script>
